{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/@skpm/fs/index.js","webpack://exports/./node_modules/@skpm/os/index.js","webpack://exports/./src/my-command.js","webpack://exports/external \"buffer\"","webpack://exports/external \"sketch\""],"names":["MESSAGES","NO_LAYER_SELECTED","document","sketch","Document","getSelectedDocument","selection","selectedLayers","page","selectedPage","isEmpty","UI","message","newLayers","forEach","layer","duplicatedLayer","duplicate","push","name","group","Group","layers","parent","adjustToFit","userHome","os","homedir","targetFolder","export","formats","compact","remove","fileName","svgString","fs","readFileSync","encoding","pasteboard","NSPasteboard","generalPasteboard","clearContents","writeObjects","e"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sDAAsD;AACrF,mCAAmC,0DAA0D;AAC7F,6BAA6B,mDAAmD;AAChF,wBAAwB,eAAe;AACvC,wBAAwB,iDAAiD;AACzE,0BAA0B,gDAAgD;AAC1E,gCAAgC,sDAAsD;AACtF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AC5QA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2DAA2D;AACtyCAAyC;AACzC,sCAAsC;AACtC,sCAAsC;AACtC,uCAAuC;AACvC,sCAAsC;AACtC,gDAAgD,UAAU;AAC1D,uCAAuC;AACvC,sCAAsC;AACtC,qCAAqC;AACrC,uCAAuC;AACvC,mCAAmC;AACnC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,IAAMA,QAAQ,GAAG;AACbC,mBAAiB,EAAE;AADN,CAAjB;AAIe,2EAAY;AACvB,MAAMC,QAAQ,GAAGC,6CAAM,CAACC,QAAP,CAAgBC,mBAAhB,EAAjB;AACA,MAAMC,SAAS,GAAGJ,QAAQ,CAACK,cAA3B;AACA,MAAMC,IAAI,GAAGN,QAAQ,CAACO,YAAtB;AAHuB,MAIhBC,OAJgB,GAILJ,SAJK,CAIhBI,OAJgB;;AAMvB,MAAIA,OAAJ,EAAa;AACTP,iDAAM,CAACQ,EAAP,CAAUC,OAAV,CAAkBZ,QAAQ,CAACC,iBAA3B;AACA;AACH;;AAED,MAAMY,SAAS,GAAG,EAAlB;AACAP,WAAS,CAACQ,OAAV,CAAkB,UAAAC,KAAK,EAAI;AACvB,QAAMC,eAAe,GAAGD,KAAK,CAACE,SAAN,EAAxB;AACAJ,aAAS,CAACK,IAAV,CAAeF,eAAf;AACH,GAHD;AAKA,MAAMG,IAAI,GAAG,sBAAb;AAEA,MAAMC,KAAK,GAAG,IAAIjB,6CAAM,CAACkB,KAAX,CAAiB;AAC3BF,QAAI,EAAJA,IAD2B;AAE3BG,UAAM,EAAET,SAFmB;AAG3BU,UAAM,EAAEf;AAHmB,GAAjB,CAAd;AAMAY,OAAK,CAACI,WAAN;AAEA,MAAMC,QAAQ,GAAGC,+CAAE,CAACC,OAAH,EAAjB;AACA,MAAMC,YAAY,aAAMH,QAAN,8BAAlB;AAEAtB,+CAAM,CAAC0B,MAAP,CAAcT,KAAd,EAAqB;AACjBU,WAAO,EAAE,KADQ;AAEjBC,WAAO,EAAE;AAFQ,GAArB;AAKAX,OAAK,CAACY,MAAN;AAGA,MAAMC,QAAQ,aAAML,YAAN,cAAsBT,IAAtB,SAAd;;AAGA,MAAI;AACA,QAAMe,SAAS,GAAGC,+CAAE,CAACC,YAAH,CAAgBH,QAAhB,EAA0B;AAACI,cAAQ,EAAE;AAAX,KAA1B,CAAlB;AACA,QAAMC,UAAU,GAAGC,YAAY,CAACC,iBAAb,EAAnB;AACAF,cAAU,CAACG,aAAX;AACAH,cAAU,CAACI,YAAX,CAAwB,WAAIR,SAAJ,EAAxB;AACA/B,iDAAM,CAACQ,EAAP,CAAUC,OAAV,WAAqBsB,SAArB;AACH,GAND,CAME,OAAOS,CAAP,EAAU;AACRxC,iDAAM,CAACQ,EAAP,CAAUC,OAAV,CAAkB,cAAlB;AACH;AACJ,C;;;;;;;;;;;AC1DD,mC;;;;;;;;;;;ACAA,mC","file":"my-command.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/my-command.js\");\n","// TODO: async. Should probably be done with NSFileHandle and some notifications\n// TODO: file descriptor. Needs to be done with NSFileHandle\nvar Buffer = require('buffer').Buffer\n\nfunction encodingFromOptions(options, defaultValue) {\n  return options && options.encoding\n    ? String(options.encoding)\n    : (\n      options\n        ? String(options)\n        : defaultValue\n    )\n}\n\nmodule.exports.constants = {\n  F_OK: 0,\n  R_OK: 4,\n  W_OK: 2,\n  X_OK: 1\n}\n\nmodule.exports.accessSync = function(path, mode) {\n  mode = mode | 0\n  var fileManager = NSFileManager.defaultManager()\n\n  switch (mode) {\n    case 0:\n      return module.exports.existsSync(path)\n    case 1:\n      return Boolean(fileManager.isExecutableFileAtPath(path))\n    case 2:\n      return Boolean(fileManager.isWritableFileAtPath(path))\n    case 3:\n      return Boolean(fileManager.isExecutableFileAtPath(path) && fileManager.isWritableFileAtPath(path))\n    case 4:\n      return Boolean(fileManager.isReadableFileAtPath(path))\n    case 5:\n      return Boolean(fileManager.isReadableFileAtPath(path) && fileManager.isExecutableFileAtPath(path))\n    case 6:\n      return Boolean(fileManager.isReadableFileAtPath(path) && fileManager.isWritableFileAtPath(path))\n    case 7:\n      return Boolean(fileManager.isReadableFileAtPath(path) && fileManager.isWritableFileAtPath(path) && fileManager.isExecutableFileAtPath(path))\n  }\n}\n\nmodule.exports.appendFileSync = function(file, data, options) {\n  if (!module.exports.existsSync(file)) {\n    return module.exports.writeFileSync(file, data, options)\n  }\n\n  var handle = NSFileHandle.fileHandleForWritingAtPath(file)\n  handle.seekToEndOfFile()\n\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding).toNSData()\n\n  handle.writeData(nsdata)\n}\n\nmodule.exports.chmodSync = function(path, mode) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.setAttributes_ofItemAtPath_error({\n    NSFilePosixPermissions: mode\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.copyFileSync = function(path, dest, flags) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.copyItemAtPath_toPath_error(path, dest, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.existsSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  return Boolean(fileManager.fileExistsAtPath(path))\n}\n\nmodule.exports.linkSync = function(existingPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.linkItemAtPath_toPath_error(existingPath, newPath, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdirSync = function(path, mode) {\n  mode = mode || 0o777\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(path, false, {\n    NSFilePosixPermissions: mode\n  }, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.mkdtempSync = function(path) {\n  function makeid() {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 6; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n  var tempPath = path + makeid()\n  module.exports.mkdirSync(tempPath)\n  return tempPath\n}\n\nmodule.exports.readdirSync = function(path) {\n  var fileManager = NSFileManager.defaultManager()\n  var paths = fileManager.subpathsAtPath(path)\n  var arr = []\n  for (var i = 0; i < paths.length; i++) {\n    arr.push(String(paths[i]))\n  }\n  return arr\n}\n\nmodule.exports.readFileSync = function(path, options) {\n  var encoding = encodingFromOptions(options, 'buffer')\n  var fileManager = NSFileManager.defaultManager()\n  var data = fileManager.contentsAtPath(path)\n  var buffer = Buffer.from(data)\n\n  if (encoding === 'buffer') {\n    return buffer\n  } else if (encoding === 'NSData') {\n    return buffer.toNSData()\n  } else {\n    return buffer.toString(encoding)\n  }\n}\n\nmodule.exports.readlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.destinationOfSymbolicLinkAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return String(result)\n}\n\nmodule.exports.realpathSync = function(path) {\n  return String(NSString.stringByResolvingSymlinksInPath(path))\n}\n\nmodule.exports.renameSync = function(oldPath, newPath) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.moveItemAtPath_toPath_error(oldPath, newPath, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.rmdirSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.statSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.attributesOfItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n\n  return {\n    dev: String(result.NSFileDeviceIdentifier),\n    // ino: 48064969, The file system specific \"Inode\" number for the file.\n    mode: result.NSFileType | result.NSFilePosixPermissions,\n    nlink: Number(result.NSFileReferenceCount),\n    uid: String(result.NSFileOwnerAccountID),\n    gid: String(result.NSFileGroupOwnerAccountID),\n    // rdev: 0, A numeric device identifier if the file is considered \"special\".\n    size: Number(result.NSFileSize),\n    // blksize: 4096, The file system block size for i/o operations.\n    // blocks: 8, The number of blocks allocated for this file.\n    atimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    mtimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    ctimeMs: Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    birthtimeMs: Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000,\n    atime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5), // the 0.5 comes from the node source. Not sure why it's added but in doubt...\n    mtime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    ctime: new Date(Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    birthtime: new Date(Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000 + 0.5),\n    isBlockDevice: function() { return result.NSFileType === NSFileTypeBlockSpecial },\n    isCharacterDevice: function() { return result.NSFileType === NSFileTypeCharacterSpecial },\n    isDirectory: function() { return result.NSFileType === NSFileTypeDirectory },\n    isFIFO: function() { return false },\n    isFile: function() { return result.NSFileType === NSFileTypeRegular },\n    isSocket: function() { return result.NSFileType === NSFileTypeSocket },\n    isSymbolicLink: function() { return result.NSFileType === NSFileTypeSymbolicLink },\n  }\n}\n\nmodule.exports.symlinkSync = function(target, path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.createSymbolicLinkAtPath_withDestinationPath_error(path, target, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.truncateSync = function(path, len) {\n  var hFile = NSFileHandle.fileHandleForUpdatingAtPath(sFilePath)\n  hFile.truncateFileAtOffset(len || 0)\n  hFile.closeFile()\n}\n\nmodule.exports.unlinkSync = function(path) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.removeItemAtPath_error(path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.utimesSync = function(path, aTime, mTime) {\n  var err = MOPointer.alloc().init()\n  var fileManager = NSFileManager.defaultManager()\n  var result = fileManager.setAttributes_ofItemAtPath_error({\n    NSFileModificationDate: aTime\n  }, path, err)\n\n  if (err.value() !== null) {\n    throw new Error(err.value())\n  }\n}\n\nmodule.exports.writeFileSync = function(path, data, options) {\n  var encoding = encodingFromOptions(options, 'utf8')\n\n  var nsdata = Buffer.from(data, encoding === 'NSData' || encoding === 'buffer' ? undefined : encoding).toNSData()\n\n  nsdata.writeToFile_atomically(path, true)\n}\n","module.exports.EOL = '\\n'\nmodule.exports.arch = function () {\n  return 'x64'\n}\nmodule.exports.constants = {\n  UV_UDP_REUSEADDR: 4,\n  dlopen: { RTLD_LAZY: 1, RTLD_NOW: 2, RTLD_GLOBAL: 8, RTLD_LOCAL: 4 },\n  errno: {\n    E2BIG: 7,\n    EACCES: 13,\n    EADDRINUSE: 48,\n    EADDRNOTAVAIL: 49,\n    EAFNOSUPPORT: 47,\n    EAGAIN: 35,\n    EALREADY: 37,\n    EBADF: 9,\n    EBADMSG: 94,\n    EBUSY: 16,\n    ECANCELED: 89,\n    ECHILD: 10,\n    ECONNABORTED: 53,\n    ECONNREFUSED: 61,\n    ECONNRESET: 54,\n    EDEADLK: 11,\n    EDESTADDRREQ: 39,\n    EDOM: 33,\n    EDQUOT: 69,\n    EEXIST: 17,\n    EFAULT: 14,\n    EFBIG: 27,\n    EHOSTUNREACH: 65,\n    EIDRM: 90,\n    EILSEQ: 92,\n    EINPROGRESS: 36,\n    EINTR: 4,\n    EINVAL: 22,\n    EIO: 5,\n    EISCONN: 56,\n    EISDIR: 21,\n    ELOOP: 62,\n    EMFILE: 24,\n    EMLINK: 31,\n    EMSGSIZE: 40,\n    EMULTIHOP: 95,\n    ENAMETOOLONG: 63,\n    ENETDOWN: 50,\n    ENETRESET: 52,\n    ENETUNREACH: 51,\n    ENFILE: 23,\n    ENOBUFS: 55,\n    ENODATA: 96,\n    ENODEV: 19,\n    ENOENT: 2,\n    ENOEXEC: 8,\n    ENOLCK: 77,\n    ENOLINK: 97,\n    ENOMEM: 12,\n    ENOMSG: 91,\n    ENOPROTOOPT: 42,\n    ENOSPC: 28,\n    ENOSR: 98,\n    ENOSTR: 99,\n    ENOSYS: 78,\n    ENOTCONN: 57,\n    ENOTDIR: 20,\n    ENOTEMPTY: 66,\n    ENOTSOCK: 38,\n    ENOTSUP: 45,\n    ENOTTY: 25,\n    ENXIO: 6,\n    EOPNOTSUPP: 102,\n    EOVERFLOW: 84,\n    EPERM: 1,\n    EPIPE: 32,\n    EPROTO: 100,\n    EPROTONOSUPPORT: 43,\n    EPROTOTYPE: 41,\n    ERANGE: 34,\n    EROFS: 30,\n    ESPIPE: 29,\n    ESRCH: 3,\n    ESTALE: 70,\n    ETIME: 101,\n    ETIMEDOUT: 60,\n    ETXTBSY: 26,\n    EWOULDBLOCK: 35,\n    EXDEV: 18\n  },\n  signals: {\n    SIGHUP: 1,\n    SIGINT: 2,\n    SIGQUIT: 3,\n    SIGILL: 4,\n    SIGTRAP: 5,\n    SIGABRT: 6,\n    SIGIOT: 6,\n    SIGBUS: 10,\n    SIGFPE: 8,\n    SIGKILL: 9,\n    SIGUSR1: 30,\n    SIGSEGV: 11,\n    SIGUSR2: 31,\n    SIGPIPE: 13,\n    SIGALRM: 14,\n    SIGTERM: 15,\n    SIGCHLD: 20,\n    SIGCONT: 19,\n    SIGSTOP: 17,\n    SIGTSTP: 18,\n    SIGTTIN: 21,\n    SIGTTOU: 22,\n    SIGURG: 16,\n    SIGXCPU: 24,\n    SIGXFSZ: 25,\n    SIGVTALRM: 26,\n    SIGPROF: 27,\n    SIGWINCH: 28,\n    SIGIO: 23,\n    SIGINFO: 29,\n    SIGSYS: 12\n  }\n}\nmodule.exports.cpus = function () {\n  return (new Array(NSProcessInfo.processInfo().processorCount())).map(function (x) {\n    return {\n      model: 'cpu',\n      speed: 0,\n      times: {\n        user: 0,\n        nice: 0,\n        sys: 0,\n        idle: 0,\n        irq: 0\n      }\n    }\n  })\n}\nmodule.exports.endianness = function () { return 'LE' }\nmodule.exports.freemem = function () { return 0 }\nmodule.exports.homedir = function () { return String(NSHomeDirectory()) }\nmodule.exports.hostname = function () { return String(NSProcessInfo.processInfo().hostName()) }\nmodule.exports.loadavg = function () { return [0, 0, 0] }\nmodule.exports.networkInterfaces = function () { return {} }\nmodule.exports.platform = function () { return 'darwin' }\nmodule.exports.release = function () { return String(NSProcessInfo.processInfo().operatingSystemVersionString()) }\nmodule.exports.tmpdir = function () { return String(NSTemporaryDirectory()) }\nmodule.exports.totalmem = function () { return Number(NSProcessInfo.processInfo().physicalMemory()) }\nmodule.exports.type = function () { return 'Darwin' }\nmodule.exports.uptime = function () { return Number(NSProcessInfo.processInfo().systemUptime()) }\nmodule.exports.userInfo = function () {\n  var info = NSProcessInfo.processInfo()\n  return {\n    uid: Number(info.processIdentifier()),\n    gid: -1,\n    username: String(info.userName()),\n    homedir: String(NSHomeDirectory()),\n    shell: null\n  }\n}\n","import sketch from 'sketch';\nimport fs from '@skpm/fs';\nimport os from '@skpm/os';\n\nconst MESSAGES = {\n    NO_LAYER_SELECTED: \"Please select a layer!\"\n};\n\nexport default function () {\n    const document = sketch.Document.getSelectedDocument();\n    const selection = document.selectedLayers;\n    const page = document.selectedPage;\n    const {isEmpty} = selection;\n\n    if (isEmpty) {\n        sketch.UI.message(MESSAGES.NO_LAYER_SELECTED);\n        return;\n    }\n\n    const newLayers = [];\n    selection.forEach(layer => {\n        const duplicatedLayer = layer.duplicate();\n        newLayers.push(duplicatedLayer);\n    });\n\n    const name = 'react-copy-component';\n\n    const group = new sketch.Group({\n        name,\n        layers: newLayers,\n        parent: page,\n    });\n\n    group.adjustToFit();\n\n    const userHome = os.homedir();\n    const targetFolder = `${userHome}/Documents/Sketch Exports`;\n\n    sketch.export(group, {\n        formats: 'svg',\n        compact: true,\n    });\n\n    group.remove();\n\n\n    const fileName = `${targetFolder}/${name}.svg`;\n\n\n    try {\n        const svgString = fs.readFileSync(fileName, {encoding: \"utf-8\"});\n        const pasteboard = NSPasteboard.generalPasteboard();\n        pasteboard.clearContents();\n        pasteboard.writeObjects([`${svgString}`]);\n        sketch.UI.message(`${svgString}`);\n    } catch (e) {\n        sketch.UI.message(\"copy failed!\");\n    }\n}\n\n","module.exports = require(\"buffer\");","module.exports = require(\"sketch\");"],"sourceRoot":""}